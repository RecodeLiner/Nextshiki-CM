[versions]

flexible = "0.1.2"
kotlin = "1.9.21"
agp = "8.2.0"
compose = "1.6.0-dev1334"
androidx-activityCompose = "1.8.2"
composeImageLoader = "1.6.4"
napier = "2.6.1"
buildConfig = "5.0.1"
kotlinx-coroutines = "1.7.3"
ktor = "2.3.6"
koin = "3.5.0"
kotlinx-serialization = "1.6.2"
kotlinx-datetime = "0.5.0"
multiplatformSettings = "1.0.0"
windowSize = "0.3.1"
kstore = "0.6.0"
slf4j = "1.7.36"
appcompat = "1.7.0-alpha03"
decompose = "3.0.0-alpha01"
essenty = "1.3.0"
libres = "1.2.2"

[libraries]

koin = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
slf4j-nop = { group = "org.slf4j", name = "slf4j-nop", version.ref = "slf4j" }

essenty = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }
androidx-activityCompose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { group = "androidx.compose.ui", name = "ui-tooling" }

androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

windowSize = { group = "dev.chrisbanes.material3", name = "material3-window-size-class-multiplatform", version.ref = "windowSize" }

decompose-base = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-compose = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose" }

flexible-bottom = { group = "com.github.skydoves", name = "flexible-bottomsheet-material3", version.ref = "flexible" }
composeImageLoader = { group = "io.github.qdsfdhvh", name = "image-loader", version.ref = "composeImageLoader" }
napier = { group = "io.github.aakira", name = "napier", version.ref = "napier" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-content-negotiaion = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }

kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
multiplatformSettings = { group = "com.russhwolf", name = "multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettingsNoArg = { group = "com.russhwolf", name = "multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
kstore = { group = "io.github.xxfast", name = "kstore", version.ref = "kstore" }

libres-compose = { group = "io.github.skeptick.libres", name = "libres-compose", version.ref = "libres" }

[bundles]

multiplatformSettings = ["multiplatformSettings", "multiplatformSettingsNoArg"]
ktor = ["ktor-client", "ktor-core", "ktor-logging", "ktor-content-negotiaion", "ktor-serialization-json", "slf4j-nop"]
koin = ["koin"]
decompose = ["decompose-base", "decompose-compose"]

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }